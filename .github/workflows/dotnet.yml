name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Setup JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11	
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
    - name: Cache ReportGenerator
      id: cache-reportgenerator
      uses: actions/cache@v1
      with:
        path: .\.sonar\reportgenerator
        key: ${{ runner.os }}-reportgenerator
        restore-keys: ${{ runner.os }}-reportgenerator
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
    - name: Install ReportGenerator
      if: steps.cache-reportgenerator.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        New-Item -Path .\.sonar\reportgenerator -ItemType Directory
        dotnet tool update dotnet-reportgenerator-globaltool --tool-path .\.sonar\reportgenerator
    - name: Restore dependencies
      run: dotnet restore		
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: powershell
      run: |
        .\.sonar\scanner\dotnet-sonarscanner begin /k:"rafael-silveira_teste-imc" /o:"rafael-silveira" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.coverageReportPaths=".\sonarqubecoverage\SonarQube.xml"
        dotnet build --no-restore
        dotnet test --no-build --collect "XPlat Code Coverage"
        .\.sonar\reportgenerator\reportgenerator "-reports:*\TestResults\*\coverage.cobertura.xml" "-targetdir:sonarqubecoverage" "-reporttypes:SonarQube"
        .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"		
    - name: Test
      run: dotnet test --no-build --verbosity normal